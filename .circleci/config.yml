# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: gcr.io/kubernetesdev-183419/cloud-sdk
        auth:
        #Put the contents of keyfile.json into an environment variable for the build called GCR_CREDS, which is then passed in.
          username: _json_key
          password: $GOOGLE_AUTH
        environment:
          GOPATH: /go
          GOBIN: /go/bin
          BASH_ENV: /root/.bashrc
    working_directory: /go/src/github.com/benbromhead/cassandra-operator
    steps:
      - run:
          name: Setup GO directories
          command: mkdir -p /go/src/github.com/benbromhead/ && mkdir -p /go/bin && mkdir -p /go/pkg && mkdir -p /usr/lib/go-1.7/bin
      - run:
          name: Install Golang 1.9
          command: |
            cd /
            curl -O https://storage.googleapis.com/golang/go1.9.1.linux-amd64.tar.gz
            tar -C /usr/local -xzf go1.9.1.linux-amd64.tar.gz
      - run:
          name: Setup gobin
          command: |
            echo 'export PATH="$PATH:/go/bin"' >> $BASH_ENV
            echo 'export PATH="$PATH:/usr/local/go/bin"' >> $BASH_ENV
      - checkout
      - setup_remote_docker
      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run:
          name: Setup Google Cloud
          command: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json && gcloud --quiet config set project ${GOOGLE_PROJECT_ID} && gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run:
          name: Install dependencies
          command: |
             echo "deb http://ftp.debian.org/debian jessie-backports main" >> /etc/apt/sources.list.d/backports.list
             apt-get update
             apt-get -y install docker.io
      - run:
          name: Install dependencies if not cached
          command: apt-get install -y curl && curl https://glide.sh/get | sh && glide install --strip-vendor
      - run: ./hack/build/operator/build
workflows:
  version: 2
  build_and_test:
    jobs:
      - build